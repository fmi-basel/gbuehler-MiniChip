% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/DrawSummitHeatmaps.R
\name{DrawSummitHeatmaps}
\alias{DrawSummitHeatmaps}
\title{DrawSummitHeatmaps}
\usage{
DrawSummitHeatmaps(
  counts,
  bamNames,
  nicebamNames = bamNames,
  plotcols = rep("darkblue", length(bamNames)),
  use.log = FALSE,
  topCpm,
  medianCpm,
  bottomCpm,
  splitHM,
  split_pos = "yes",
  split_neg = "no",
  TargetHeight = 0,
  orderSample = 0,
  orderWindows = NULL,
  clusterSample = 1,
  summarizing = "mean",
  show_axis = FALSE,
  MetaScale = rep("all", length(bamNames))
)
}
\arguments{
\item{counts}{A list of counts across peak summits generated by SummitHeatmap.}

\item{bamNames}{A character vector of names to describe the bam files you are using. This should match colnames(counts).}

\item{nicebamNames}{A character vector of short names to describe the bam files you are using. Needs to be the same length as bamNames.}

\item{plotcols}{The colors for the topCpm value for the heatmaps. Default is darkblue for all hetmaps.
Should be a vector of colors of the same length as the number of heatmaps drawn.}

\item{use.log}{If TRUE, the heatmap will be plotted in log2 scale. FALSE by default. A pseudo-count of 1 is added if Zeros are encountered in the matrix.}

\item{topCpm}{The CPM values that correspond to the black color Any value above that will appear black.
Should be a vector of integers of the same length as the number of heatmaps drawn. If not secified, maximum CPM value in the current count table is used.}

\item{medianCpm}{The CPM values that correspond to the plotcols. Any value above that will get darker, towrads black.
Should be a vector of integers of the same length as the number of heatmaps drawn. If not secified, median CPM value in the current count table is used.}

\item{bottomCpm}{The CPM values that correspond to the white color. Any value below that will appear white.
Should be a vector of integers of the same length as the number of heatmaps drawn. If not secified, minimum CPM value in the current count table is used.}

\item{splitHM}{Optinal. You can add a list of row identifiers of the counts table(s) that have a certain attribute.
The heatmap will be split into the rows that are in this list and the remianing rows.}

\item{split_pos}{Name for the part of the split heatmap that overlaps the splitHM rows. Default is "yes".}

\item{split_neg}{Name for the part of the split heatmap that does not overlap the splitHM rows. Default is "no".}

\item{TargetHeight}{The number of rows the plotted heatmap should have after averaging. Default = 0, which means no summarization will be done. If TargetHeight > 0,
the number of rows in the final heatmap will be reduced and therefore splitHM cannot be used.}

\item{orderSample}{The heatmap where the rows will be ordered by the 0 bin. Defaults to 0 (no ordering).}

\item{orderWindows}{The heatmap windows that will be used for ordering. By default, the heatmap will be ordered by the mean of all windows.
If an integer (n) is supplied, it will be ordered by the middle window plus n windows on each side.}

\item{clusterSample}{The heatmap where the rows will be ordered by hierarchical clustering. Defaults to 1 (the first heatmap).}

\item{summarizing}{The function to average the heatmaps to achieve a cumulative line. The cpm or count values are first log2 transformed
with a pseudo count of 1 added. Default is mean.}

\item{show_axis}{Show the axis of the cumulative plot above the heatmap. Default is FALSE.}

\item{MetaScale}{A vector of the same length as heatmaps, with values "all" or "individual". Defaults to "all",
which means that the maximum of the y-axis for the metaplots will correspond to the maximum of all values in all heatmaps.
Otherwise the scale will correspond to the maximum of the current metaplot.}
}
\value{
A complex heatmap object containing a heatmap for each sample (each bam file),
sorted by the values in the middle window (around peak summit) of the chosen orderSample.
}
\description{
This function plots heatmaps of pre-calculated read counts around the summits of ChIP peaks.
}
\details{
This function plots heatmaps of pre-calculated read counts around the summits of ChIP peaks.
}
\examples{
library(methods)
counts <- list(matrix(abs(rnorm(21000,2,1)),ncol=21,nrow=100,dimnames=list(1:100,-10:10)),
               matrix(abs(rnorm(21000,2,1)),ncol=21,nrow=100,dimnames=list(1:100,-10:10)))
bamNames <- c("counts1","counts2")
names(counts) <- bamNames
DrawSummitHeatmaps(counts,bamNames, orderSample=1, bottomCpm = c(0,0), topCpm=c(10,10),use.log=FALSE)

}
